{"remainingRequest":"/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/thread-loader/dist/cjs.js!/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/babel-loader/lib/index.js!/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/src/components/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/src/components/User.vue","mtime":1667059594290},{"path":"/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1665933944222},{"path":"/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1665933943858},{"path":"/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/babel-loader/lib/index.js","mtime":1665933945028},{"path":"/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1665933944222},{"path":"/Users/calliesardina/Fall_2022/GiveCard/local/student-backend/frontend/node_modules/vue-loader/lib/index.js","mtime":1665933944843}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserDataService from \"../service/UserDataService\";\nexport default {\n  name: \"User\",\n  data: function data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      status: \"\",\n      dob: \"\",\n      phoneNumber: \"\",\n      city: \"\",\n      errors: []\n    };\n  },\n  computed: {\n    id: function id() {\n      return this.$route.params.id;\n    }\n  },\n  methods: {\n    refreshUserDetails: function refreshUserDetails() {\n      var _this = this;\n\n      UserDataService.retrieveUser(this.id).then(function (res) {\n        _this.firstName = res.data.firstName;\n        _this.lastName = res.data.lastName;\n        _this.email = res.data.email;\n        _this.status = res.data.status;\n        _this.dob = res.data.dob;\n        _this.phoneNumber = res.data.phoneNumber;\n        _this.city = res.data.city;\n      });\n    },\n    validateAndSubmit: function validateAndSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.errors = [];\n\n      if (!this.firstName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.firstName.length < 1) {\n        this.errors.push(\"Enter atleast 1 characters in First Name\");\n      }\n\n      if (!this.lastName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.lastName.length < 1) {\n        this.errors.push(\"Enter atleast 1 characters in Last Name\");\n      }\n\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,\n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city\n          }).then(function () {\n            _this2.$router.push({\n              path: \"/users/home\"\n            });\n          });\n        } else {\n          UserDataService.updateUser(this.id, {\n            id: this.id,\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,\n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city\n          }).then(function () {\n            _this2.$router.push({\n              path: \"/user/\" + _this2.id + \"/next\"\n            });\n          });\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.refreshUserDetails();\n  }\n};",{"version":3,"sources":["User.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h3>User</h3>\n    <div class=\"container\">\n      <form @submit=\"validateAndSubmit\">\n        <div v-if=\"errors.length\">\n          <div\n            class=\"alert alert-danger\"\n            v-bind:key=\"index\"\n            v-for=\"(error, index) in errors\"\n          >\n            {{ error }}\n          </div>\n        </div>\n        <fieldset class=\"form-group\">\n          <label>First Name</label>\n          <input type=\"text\" class=\"form-control\"\n           v-model=\"firstName\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Last Name</label>\n          <input type=\"text\" class=\"form-control\"\n           v-model=\"lastName\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Email</label>\n          <input type=\"text\" class=\"form-control\" \n          v-model=\"email\" />\n        </fieldset>\n        <button class=\"btn btn-success\" \n        type=\"submit\">Save</button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport UserDataService from \"../service/UserDataService\";\n\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      status: \"\",\n      dob: \"\",\n      phoneNumber: \"\",\n      city: \"\",\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    refreshUserDetails() {\n      UserDataService.retrieveUser(this.id).then((res) => {\n        this.firstName = res.data.firstName;\n        this.lastName = res.data.lastName;\n        this.email = res.data.email;\n        this.status = res.data.status;\n        this.dob = res.data.dob;\n        this.phoneNumber = res.data.phoneNumber;\n        this.city = res.data.city;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.firstName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.firstName.length < 1) {\n        this.errors.push\n        (\"Enter atleast 1 characters in First Name\");\n      }\n      if (!this.lastName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.lastName.length < 1) {\n        this.errors.push\n        (\"Enter atleast 1 characters in Last Name\");\n      }\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,\n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city,\n          }).then(() => {\n            this.$router.push({path: \"/users/home\"});\n          });\n        } else {\n          UserDataService.updateUser(this.id, {\n            id: this.id,\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,\n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city,\n          }).then(() => {\n            this.$router.push({path: \"/user/\" + this.id + \"/next\"})\n          });\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshUserDetails();\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}