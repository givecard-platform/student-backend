{"remainingRequest":"/Users/calliesardina/GiveCard-CS/student-backend/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/calliesardina/GiveCard-CS/student-backend/frontend/src/components/Next.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/calliesardina/GiveCard-CS/student-backend/frontend/src/components/Next.vue","mtime":1670682386101},{"path":"/Users/calliesardina/GiveCard-CS/student-backend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1670682383005},{"path":"/Users/calliesardina/GiveCard-CS/student-backend/frontend/node_modules/babel-loader/lib/index.js","mtime":1670682382943},{"path":"/Users/calliesardina/GiveCard-CS/student-backend/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1670682383005},{"path":"/Users/calliesardina/GiveCard-CS/student-backend/frontend/node_modules/vue-loader/lib/index.js","mtime":1670682385857}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserDataService from \"../service/UserDataService\";\n\nexport default {\n  name: \"Next\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      status: \"\",\n      dob: \"\",\n      phoneNumber: \"\",\n      city: \"\",\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    refreshUserDetails() {\n      UserDataService.retrieveUser(this.id).then((res) => {\n        //this.id = res.data.id;\n        this.firstName = res.data.firstName;\n        this.lastName = res.data.lastName;\n        this.email = res.data.email;\n        this.status = res.data.status;\n        this.dob = res.data.dob;\n        this.phoneNumber = res.data.phoneNumber;\n        this.city = res.data.city;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.city) {\n        this.errors.push(\"Enter valid values\");\n      } \n      if (!this.dob) {\n        this.errors.push(\"Enter valid values\");\n      } \n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,\n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city,\n          }).then(() => {\n            this.$router.push({path: \"/user/\" + this.id + \"/status\"});\n          });\n        } else {\n          UserDataService.updateUser(this.id, {\n            //id: this.id,\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,            \n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city,\n          }).then(() => {\n            this.$router.push({path: \"/user/\" + this.id + \"/status\"})\n          });\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshUserDetails();\n  },\n};\n",{"version":3,"sources":["Next.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Next.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h3>Next</h3>\n    <div class=\"container\">\n      <form @submit=\"validateAndSubmit\">\n        <div v-if=\"errors.length\">\n          <div\n            class=\"alert alert-danger\"\n            v-bind:key=\"index\"\n            v-for=\"(error, index) in errors\"\n          >\n            {{ error }}\n          </div>\n        </div>\n        <fieldset class=\"form-group\">\n          <label>DoB</label>\n          <input type=\"text\" class=\"form-control\"\n           v-model=\"dob\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Phone Number</label>\n          <input type=\"text\" class=\"form-control\"\n           v-model=\"phoneNumber\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>City</label>\n          <input type=\"text\" class=\"form-control\" \n          v-model=\"city\" />\n        </fieldset>\n        <button class=\"btn btn-success\" \n        type=\"submit\">Save</button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport UserDataService from \"../service/UserDataService\";\n\nexport default {\n  name: \"Next\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      status: \"\",\n      dob: \"\",\n      phoneNumber: \"\",\n      city: \"\",\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    refreshUserDetails() {\n      UserDataService.retrieveUser(this.id).then((res) => {\n        //this.id = res.data.id;\n        this.firstName = res.data.firstName;\n        this.lastName = res.data.lastName;\n        this.email = res.data.email;\n        this.status = res.data.status;\n        this.dob = res.data.dob;\n        this.phoneNumber = res.data.phoneNumber;\n        this.city = res.data.city;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.city) {\n        this.errors.push(\"Enter valid values\");\n      } \n      if (!this.dob) {\n        this.errors.push(\"Enter valid values\");\n      } \n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,\n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city,\n          }).then(() => {\n            this.$router.push({path: \"/user/\" + this.id + \"/status\"});\n          });\n        } else {\n          UserDataService.updateUser(this.id, {\n            //id: this.id,\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n            status: this.status,            \n            dob: this.dob,\n            phoneNumber: this.phoneNumber,\n            city: this.city,\n          }).then(() => {\n            this.$router.push({path: \"/user/\" + this.id + \"/status\"})\n          });\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshUserDetails();\n  },\n};\n</script>\n"]}]}